---
const data = await fetch("http://192.168.1.252/server/active", {
  method: "GET",
  headers: {
    'Accept': 'application/json',	
    'Content-Type': 'application/json'}
    }).then(res => 
    {
    return res.json()
    });
---

<script>

  window.done = async function done(node, id) {
      console.log(node);
      const sheet = document.getElementById(id);
      console.log(sheet);
      await fetch("http://192.168.1.252/server/close", {
        method: "POST",
        headers: {
          'Accept': 'application/json',	
            'Content-Type': 'application/json'},
          body: JSON.stringify({"id": id})
        }).then(res => 
          {
              console.log(res);
              //remove the node
              sheet.classList.add("flash");
              sheet.classList.add("gone");
              node.classList.add("flash");
              node.classList.add("gone");

            }).catch(() => {
                window.confirm("something went wrong, get Pete !!");
            });

  }
</script>

<style>
  .gone {
    position: absolute;
    height: 0 !important;
    width: 0 !important;
    transition: all 9s ease;
  }
  .flash {
    animation: red ease 500ms forwards;
  }
  @keyframes red-border{
    from {
      border: red solid 2px;
      opacity: 1;
    }
    to {
      border: white solid 2px;
      opacity: 0;
    }
  }
  @keyframes red{
    from {
      background: red;
      opacity: 1;
    }
    to {
      background: white;
      opacity: 0;
    }
  }
  .page {
    width:80vw;
    margin: 10vw;
    display: flex;
    justify-content: center;

    flex-direction: row;
    flex-wrap: wrap;
    gap: 2rem 2rem;
  }
  .container {
  }
  .sheet {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 2fr));
    gap: 1rem;
    justify-items: stretch;
    align-items: stretch;
    padding: 1rem;
    width: 400px;
    background: rgba(250,250,250, 0.61);
    box-shadow: rgba(0, 0, 0, 0.1) 0px 1px 3px 0px, rgba(0, 0, 0, 0.06) 0px 1px 2px 0px;
    transition: all 9s ease;
  }
  .header {
    display: flex;
    height: 6rem;
    width: 400px;
    align-items: end;
    transition: all 9s ease;

  }

  .sheet p {
    padding: 1rem;
  }
  .sheet h2 {
    width: 8rem;
    border-bottom: black solid 1px;
  }
  .field {
    display: flex;
    flex-direction: column;
    padding: 1rem;
    min-height: 5rem;
    width: auto;
    align-items: start;
    box-shadow: rgba(0, 0, 0, 0.06) 0px 2px 4px 0px inset;
  }
  button {
    font-weight: 900;
    margin: 1rem;
    outline: none;
    border: none;
    padding: 0.5rem;
    background: rgba(200,255,200, 0.5);
  }
</style>

<div class="page">
  {
  data.map(x => 
  <div class="container">
    <div class="header"><button onclick=`done(this, ${x.id})`>DONE!</button></div>
    <div class="sheet" id=`${x.id}`>
    <div class="field"><h2>ID</h2><p>{x.id}</p></div>
    <div class="field"><h2>Job Description</h2><p>{x.quote}</p></div>
    <div class="field"><h2>Engineer</h2><p>{x.author}</p></div>
    <div class="field"><h2>Date</h2><p>{x.year}</p></div>
    <div class="field"><h2>Start Time</h2><p>{x.startTime}</p></div>
    <div class="field"><h2>End Time</h2><p>{x.endTime}</p></div>
    <div class="field"><h2>Equipment</h2><p>{x.equipment}</p></div>
    <div class="field"><h2>Parts Used</h2><p>{x.partsUsed}</p></div>
    <div class="field"><h2>Materials Used</h2><p>{x.materialsUsed}</p></div>
    <div class="field"><h2>Further Action Required</h2><p>{x.furtherAction}</p></div>
    <div class="field"><h2>Location</h2><p>{x.location}</p></div>
    <div class="field"><h2>Amendments</h2><p>{x.updateList}</p></div>
  </div>
  </div>
  )
  }
</div>
