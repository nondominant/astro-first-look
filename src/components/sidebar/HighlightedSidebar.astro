---

const { title, sections } = Astro.props;
//const softsections = JSON.parse("[\"a\",\"b\",\"c\"]");
const sectionsArray = JSON.parse(sections);
---
<script> 

function focus(node){
node.classList.add('highlighted');
node.classList.remove('unhighlighted');
}
function unfocus(node){
node.classList.add('unhighlighted');
node.classList.remove('highlighted');
}

function isCenter(element){
  if (!element) { return false; }
  let bound = element.getBoundingClientRect();
  let t = bound.top;
  let b = bound.bottom;
  let center = ((b - t) / 2) + t;
  let viewportCenter = window.innerHeight/2;
  if ((viewportCenter > t) && (b > viewportCenter)) {
    return true;
  }
  return false;
}

function distance(element) {
  if (!element) { return -1; }
  let bound = element.getBoundingClientRect();
  let t = bound.top;
  let b = bound.bottom;
  let center = ((b - t) / 2) + t;
  let ans = Math.abs(window.innerHeight/2 - center) 
  return ans;
}

function check(sections_of_interest) {
const names = [...sections_of_interest];
for (let i = 0; names.length > i; i ++) {
    let link = document.querySelector(`.${names[i]}`);
    if(link) {
      if(isCenter(document.getElementById(`${names[i]}`))) {
          focus(link);
      } else {
          unfocus(link);
      }
    }
  }
}

if (typeof window !== 'undefined') {
  let parentNode = document.querySelector('.sidebar-list');
  if(parentNode){
    let children = parentNode.children;
    let arr = [...children];
    arr = arr.map((x) => x.outerText)
    document.addEventListener('scroll', () => {check.call(window, arr)});
  }
}
</script>

<!-- @style section -->
<style>
  a {
    text-decoration: none;
    color: inherit;
  }

  .highlighted {
    color: rgba(255,255,255,1);
    background: rgba(130,255,255,0.3);
    transition: all 2s ease;
  }
  .unhighlighted {
    color: black;
    background: transparent;
    border-radius: 0px;
    transition: all 2s ease;
  }

  .sidebar {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    min-width: 20vw;
    min-height: 30vh;
    z-index: 99;
  }

  .sidebar li {
    padding: 1rem;
    border-top: black solid 1px;
  }

  .sidebar h2 {
    font-size: 2rem;
    margin: 1rem;
    position: relative;
  }
  .sidebar h2:before {
    content: '';
    position: absolute;
    top: 50%;
    left:-60px;
    display: block;
    width: 60px;
    height: 5px;
    border-top: black solid 1px;
  }
  .sidebar h2:after {
    content: '';
    position: absolute;
    top: 50%;
    right: -60px;
    display: block;
    width: 60px;
    border-top: black solid 1px;
  }
</style>

<!-- @html section -->
<div class="sidebar">
  <h2>Sections</h2>
  <ul class="sidebar-list">
    {sectionsArray.map((section) => (
    <>
    <li class={section}> <a href={`#${section}`}> {section} </a> </li>
    </>
    ))}
  </ul>
</div>
